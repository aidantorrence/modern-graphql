"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.typeDefs = void 0;
var apollo_server_1 = require("apollo-server");
exports.typeDefs = (0, apollo_server_1.gql)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    type Query {\n        posts: [Post!]!\n    }\n\n    type Mutation {\n        postCreate(title: String, content: String): PostPayload!\n        postUpdate(postId: ID!, title: String, content: String): PostPayload!\n        postDelete(postId: ID!): PostPayload!\n        userCreate(name: String!, email: String!, password: String!): AuthPayload!\n        userDelete(id: ID!): UserDeletePayload!\n    }\n    type Post {\n        id: ID!\n        title: String!\n        content: String!\n        published: Boolean!\n        createdAt: String!\n        user: User!\n    }\n    type User {\n        id: ID!\n        name: String!\n        email: String!\n        createdAt: String!\n        profile: Profile!\n        posts: [Post!]!\n    }\n    type Profile {\n        id: ID!\n        bio: String!\n        user: User!\n    }\n    type UserError {\n        message: String!\n    }\n    type PostPayload {\n        userErrors: [UserError!]!\n        post: Post\n    }\n    type PostInput {\n        title: String\n        content: String\n    }\n    type AuthPayload {\n        userErrors: [UserError!]!\n        token: String\n    }\n    type UserDeletePayload {\n        userErrors: [UserError!]!\n        user: User\n    }\n"], ["\n    type Query {\n        posts: [Post!]!\n    }\n\n    type Mutation {\n        postCreate(title: String, content: String): PostPayload!\n        postUpdate(postId: ID!, title: String, content: String): PostPayload!\n        postDelete(postId: ID!): PostPayload!\n        userCreate(name: String!, email: String!, password: String!): AuthPayload!\n        userDelete(id: ID!): UserDeletePayload!\n    }\n    type Post {\n        id: ID!\n        title: String!\n        content: String!\n        published: Boolean!\n        createdAt: String!\n        user: User!\n    }\n    type User {\n        id: ID!\n        name: String!\n        email: String!\n        createdAt: String!\n        profile: Profile!\n        posts: [Post!]!\n    }\n    type Profile {\n        id: ID!\n        bio: String!\n        user: User!\n    }\n    type UserError {\n        message: String!\n    }\n    type PostPayload {\n        userErrors: [UserError!]!\n        post: Post\n    }\n    type PostInput {\n        title: String\n        content: String\n    }\n    type AuthPayload {\n        userErrors: [UserError!]!\n        token: String\n    }\n    type UserDeletePayload {\n        userErrors: [UserError!]!\n        user: User\n    }\n"])));
var templateObject_1;
